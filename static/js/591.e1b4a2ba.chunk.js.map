{"version":3,"file":"static/js/591.e1b4a2ba.chunk.js","mappings":"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","sources":["api/api.js","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'bc10706c6695cbc040a40fff81bfdeeb';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}/trending/all/week?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMoviesByName = async searchQuery => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","import styled from 'styled-components';\n\nexport const DetailsWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const DetailsSubwrap = styled.div`\n  max-width: 600px;\n  margin-left: 40px;\n`;\n","import PropTypes from 'prop-types';\nimport { DetailsWrap, DetailsSubwrap } from './MovieDetails.styled';\n\nexport const MovieDetails = ({ movieData }) => {\n \n  const { poster_path, title, vote_average, overview, genres } = movieData;\n\n  const posterURL = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  return (\n    <DetailsWrap>\n      <img src={posterURL} alt={title} width=\"240\" />\n      <DetailsSubwrap>\n        {' '}\n        <h1>{title}</h1>\n        <p>Score: {vote_average}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <p>{genres?.map(genre => genre.name).join(', ')}</p>\n      </DetailsSubwrap>\n    </DetailsWrap>\n  );\n};\n\nMovieDetails.propTypes = {\n  movieData: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string.isRequired })\n    ),\n  }).isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n\n  padding: 8px 16px;\n  border-radius: 4px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  border: 2px solid black;\n  background-color: #00000024;\n\n  :hover {\n    background-color: orangered;\n    color: white;\n    border: 2px solid transparent;\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  gap: 10px;\n  padding: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from '../../api/api';\nimport { MovieDetails } from '../../components/MovieDetails/MovieDetails';\nimport { StyledLink, ButtonWrap } from './MovieDetailsPage.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [currentMovie, setCurrentMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async movieId => {\n      try {\n        setError(false);\n        setIsLoading(true);\n\n        const fetchedMovie = await fetchMovieById(movieId);\n\n        setCurrentMovie(fetchedMovie);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <StyledLink to={backLinkHref}>Go back</StyledLink>\n\n      {error ? <div>An error occurred, please try again later...</div> : null}\n\n      {isLoading ? <Loader /> : <MovieDetails movieData={currentMovie} />}\n\n      <ButtonWrap>\n        <StyledLink to=\"cast\">Cast</StyledLink>\n        <StyledLink to=\"reviews\">Reviews</StyledLink>\n      </ButtonWrap>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["API_URL","API_KEY","fetchTrendMovies","axios","data","Error","fetchMoviesByName","searchQuery","fetchMovieById","movieId","fetchMovieCredits","fetchMovieReviews","DetailsWrap","styled","DetailsSubwrap","MovieDetails","movieData","poster_path","title","vote_average","overview","genres","posterURL","src","alt","width","map","genre","name","join","StyledLink","NavLink","ButtonWrap","useParams","location","useLocation","useState","currentMovie","setCurrentMovie","isLoading","setIsLoading","error","setError","backLinkHref","state","from","useEffect","fetchMovie","fetchedMovie","to","Loader"],"sourceRoot":""}